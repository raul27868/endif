#star:  docker-compose up -d
#stop:  docker-compose rm -fsv
#   docker exec  -it endif-scrap_launch sh -c "cd /usr/local/src; sh"
#Usar variables dentro de compose: https://docs.docker.com/compose/compose-file/compose-file-v3/#variable-substitution

version: '3.7'

services:
#Base de datos mongo
  mongo:
    #docker run --rm --name endif-mongo-container -d -v $(pwd)/mongo-volume:/data/db -p 27017:27017 mongo:4.4
    image: 'mongo:4.4'
    
    container_name: 'endif-mongo-container-v4'
    restart: always

    ports:
      - "27018:27018"
    volumes:
     # - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      #- ./mongo-volume:/data/db
      # Si  existe la variable de entorno carga FOLDER_DATABASE si no ./mongo-volume
      - ${FOLDER_DATABASE:-./mongo-volume}:/data/db
 

    networks:
      - mongo-compose-network
     #command: mongod

 
#Web: API Fast-API
  api:
    image: 'raulreyero/fastapi-mongo:v4'
    container_name: 'endif-api-v4'
    depends_on:
      - "mongo"
    restart: always
    volumes: 
      - ./workdir:/workdir
    env_file:
      - .env
    ports:
      - "5005:80" #airbnb
      - "5006:80" #destinia
      - "5007:80" #expedia
    links:
      - "mongo:mongo"
    networks:
      - mongo-compose-network

 
#Scraper(demonio): 
  scrap_launch:
    image: "raulreyero/endif-scrap:v4"
    container_name: 'endif-scrap_launch-v4'
    depends_on:
      - "mongo"
    #restart: always
    volumes: 
      - ./workdir:/workdir
    shm_size: '2gb'
    env_file:
      - .env
    links:
      - "mongo:mongo"
    networks:
      - mongo-compose-network
    
    #Para producción 
    command: sh -c "python scrap_launch.py airbnb; python scrap_launch.py expedia; python scrap_launch.py destinia;"

    #Para mantener el contenedor ejecutandose
    #command: tail -F anything
 


#Mongo Express: Visualizar los datos
  express:
    image: mongo-express
    container_name: 'endif-express-v4'
    env_file:
      - .env
    depends_on:
      - "mongo"
    ports:
      - "5099:8081"
    links:
      - "mongo:mongo"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      #Se leen de variables de configuración en .env
      - ME_CONFIG_BASICAUTH_USERNAME
      - ME_CONFIG_BASICAUTH_PASSWORD
    networks:
      - mongo-compose-network      

networks: 
    mongo-compose-network:
      driver: bridge
      name: mongo-compose-network
